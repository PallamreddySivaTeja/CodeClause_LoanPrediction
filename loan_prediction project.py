# -*- coding: utf-8 -*-
"""Loan Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jlsGPRzjctnIHcLO2s03i54d_UKtKXlM
"""

import pandas as pd
data=pd.read_csv("/test_Y3wMUE5_7gLdaTN.csv")
print(data)

data.shape

data.info()

data.isna().sum()

data.Loan_ID.nunique()

data['Gender']= data['Gender'].map({'Male':0, 'Female':1})
data['Married']= data['Married'].map({'No':0, 'Yes':1})
data['Self_Employed']= data['Self_Employed'].map({'N0':1, 'Yes':0})

data.isnull().sum()

data = data.dropna()
data.isnull().sum()

X = data[['Gender', 'Married', 'ApplicantIncome', 'LoanAmount', 'Credit_History']]
y = data.Self_Employed
X.shape, y.shape

from sklearn.model_selection import train_test_split
x_train, x_cv, y_train, y_cv = train_test_split(X,y, test_size = 0.2, random_state = 10)

from sklearn.ensemble import RandomForestClassifier 
model = RandomForestClassifier(max_depth=4, random_state = 10) 
model.fit(x_train, y_train)

from sklearn.metrics import accuracy_score
pred_cv = model.predict(x_cv)
accuracy_score(y_cv,pred_cv)

pred_train = model.predict(x_train)
accuracy_score(y_train,pred_train)

# saving the model 
import pickle 
pickle_out = open("classifier.pkl", mode = "wb") 
pickle.dump(model, pickle_out) 
pickle_out.close()

pip install streamlit

# Commented out IPython magic to ensure Python compatibility.
%%writefile app.py 
import pickle
import streamlit as st
pickle_in = open('classifier.pkl', 'rb') 
classifier = pickle.load(pickle_in)
 
@st.cache()

def prediction(Gender, Married, ApplicantIncome, LoanAmount, Credit_History):   

     if Gender == "Male":
        Gender = 0
     else:
         Gender = 1
  
     if Married == "Unmarried":
         Married = 0
     else:
         Married = 1
 
     if Credit_History == "Unclear Debts":
        Credit_History = 0
     else:
         Credit_History = 1   
    LoanAmount = LoanAmount / 1000
    prediction = classifier.predict( 
         [[Gender, Married, ApplicantIncome, LoanAmount, Credit_History]])
      
     if prediction == 0:
         pred = 'Rejected'
     else:
         pred = 'Approved'
     return pred
       
  
def main():
    html_temp = """ 
    <div style ="background-color:yellow;padding:13px"> 
    <h1 style ="color:black;text-align:center;">Streamlit Loan Prediction ML App</h1> 
    </div> 
    """
    st.markdown(html_temp, unsafe_allow_html = True) 

    Gender = st.selectbox('Gender',("Male","Female"))
    Married = st.selectbox('Marital Status',("Unmarried","Married")) 
    ApplicantIncome = st.number_input("Applicants monthly income") 
    LoanAmount = st.number_input("Total loan amount")
    Credit_History = st.selectbox('Credit_History',("Unclear Debts","No Unclear Debts"))
    result =""
    if st.button("Predict"): 
         result = prediction(Gender, Married, ApplicantIncome, LoanAmount, Credit_History) 
         st.success('Your loan is {}'.format(result))
         print(LoanAmount)
      
if __name__=='__main__': 
     main()

!streamlit run app.py &npx localtunnel --port 8501

#By access the Above website(https://warm-clocks-invent.loca.lt) we should provide the  tunnel creators public IP Address .